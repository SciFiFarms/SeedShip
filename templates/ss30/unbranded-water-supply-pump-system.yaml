# This is an unbranded-water-supply-mixer.yaml template.
substitutions:
  #debug: !debug
  <<: !include templates/generated_substitutions.yaml

packages:
  package-bus: !include packages/bus.yaml
  package-drainage-bus: !include packages/drainage_bus.yaml
  package-water-supply-resource: !include packages/water_supply_resource.yaml


switch:
  # Relay 1
  # Solenoid.
  - platform: dosage
    name: "${system_friendly} RO Water"
    command_topic: seedship/${system}/ro_water
    pin:
      number: GPIO15
      mode: OUTPUT
    id: ro_water
    restore_mode: ALWAYS_OFF
    dosage: 2 min

  # Relay 2
  # Solenoid.
  - platform: dosage
    name: "${system_friendly} Discharge"
    command_topic: seedship/${system}/${subsystem}_discharge
    pin:
      number: GPIO5
      mode: OUTPUT
    id: discharge
    restore_mode: ALWAYS_OFF
    dosage: 15s

  # Relay 3
  # Solenoid.
  - platform: dosage
    name: "${system_friendly} Strawberry Water Line"
    command_topic: seedship/${system}/strawberry_water_line
    pin:
      number: GPIO14
      mode: OUTPUT
    id: strawberry_water_line
    restore_mode: ALWAYS_OFF
    dosage: 30 s

  # Relay 4
  - platform: dosage
    name: "${system_friendly} Water Pump"
    command_topic: seedship/${system}/water_pump
    pin:
      number: GPIO12
    id: water_pump
    restore_mode: ALWAYS_OFF
    dosage: 5 min

  # Relay USB
  - platform: gpio
    name: "${system_friendly} ${subsystem_friendly} Esp32 Power"
    command_topic: seedship/${system}/${subsystem}_esp32_power
    pin: GPIO4
    id: esp32_power
    restore_mode: ALWAYS_ON

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO13
      mode: INPUT_PULLUP
      inverted: True
    name: "${system_friendly} ${subsystem_friendly} Button"
    on_multi_click:
      - timing:
          - ON for at least 3s
        then:
          - if:
              condition:
                - lambda: |-
                    return id(mode).state == $MODE_MANUAL_OVERRIDE;
              then:
                - lambda: |-
                    id(mode).publish_state($MODE_RUNNING);
              else:
                - lambda: |-
                    id(mode).publish_state($MODE_MANUAL_OVERRIDE);

      - timing:
          - ON for at most 1s
          - OFF for at most 0.3s
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - logger.log: "Double-Clicked"
          - if:
              condition:
                - lambda: |-
                    return id(mode).state == $MODE_RUNNING;
              then:
                - if:
                    condition:
                      - script.is_running: pump_system
                    then:
                      - logger.log: Already pumping water. Canceling job.
                      - script.stop: pump_system
                      - lambda: |-
                          id(water).cancel_dose();
                          id(discharge).cancel_dose();
                          id(water_line).cancel_dose();
                    else:
                      - script.execute: pump_system

      - timing:
          - ON for at most 1s
          - OFF for at least 0.5s
        then:
          - logger.log: "Single-Clicked"
          - switch.turn_off: strawberry_water_line
          - lambda: |-
              id(discharge).dose();

  - platform: status
    name: "${system_friendly} ${subsystem_friendly} Status"

sensor:
  - platform: mqtt_subscribe
    id: bus_psi
    topic: seedship/${system}/bus_psi
    on_value:

      - if:
          condition:
              and:
                  - sensor.in_range:
                      id: bus_psi
                      below: 70
                  - sensor.in_range:
                      id: ro_psi
                      # TODO: This is likely too high.
                      above: 80
                  - not:
                      script.is_running: make_batch_of_water
                  - lambda: |-
                      return id(mode).state == $MODE_RUNNING;
                  - mqtt.connected:
          then:
            - mqtt.publish:
                topic: seedship/${system}/strawberries
                payload: 1

  - platform: mqtt_subscribe
    id: ro_psi
    topic: seedship/${system}/ro_psi

  - platform: mqtt_subscribe
    id: strawberry
    topic: seedship/${system}/strawberries
    on_value:
      - if:
          condition:
            - script.is_running: make_batch_of_water
          then:
            - logger.log: Already making water. Exiting.
          else:
            - logger.log: Running make_batch_of_water
            - script.execute: make_batch_of_water

  - !include templates/sensor/seedship_mode_internal.yaml
  - platform: wifi_signal
    name: "${system_friendly} ${subsystem_friendly} WiFi Signal"
    update_interval: 60s
  - platform: uptime
    name: "${system_friendly} ${subsystem_friendly} Uptime"

text_sensor:
  - platform: version
    name: "${system_friendly} ${subsystem_friendly} ESPHome Version"

  - platform: mqtt_subscribe
    name: "${system_friendly} Warnings"
    #id: warnings
    topic: seedship/${system}/warnings


status_led:
  pin:
    number: GPIO2


esphome:
  <<: !include templates/esphome/esp01_1m.yaml


wifi: !include secrets/wifi.yaml
mqtt: !include templates/mqtt/mqtt.yaml
logger:
ota:
